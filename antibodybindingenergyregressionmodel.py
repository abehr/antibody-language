# -*- coding: utf-8 -*-
"""AntibodyBindingEnergyRegressionModel.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1N2t4JCxG1uFA__bM3Hu4RoD6_Dvhn_sP
"""

import numpy as np
import torch
import torch.nn as nn
import keras
from keras.models import Sequential
from keras.layers import Dense

#Number of residues in sequence
n = 200 

X_train = np.random.rand(100, 1280*n)
Y_train = np.random.rand(100, 3)

input_shape = X_train.shape[1]

dropout = .2

def RegressionModel(input_shape, dropout=.2):
    X_input = keras.Input(input_shape)
    X = keras.layers.Dropout(dropout)(X_input)
    X = Dense(300, activation='relu')(X_input)
    X = keras.layers.Dropout(dropout)(X)
    X = Dense(200, activation='relu')(X_input)
    X = keras.layers.Dropout(dropout)(X)
    X = Dense(100, activation='relu')(X_input)
    X = keras.layers.Dropout(dropout)(X)
    X = Dense(3, activation='sigmoid')(X_input)

    model = keras.Model(inputs = X_input, outputs = X, name='RegressionModel')

    return model

model = RegressionModel(input_shape)

model.compile(optimizer='adam', loss=keras.losses.MeanSquaredError())

model.fit(x=X_train, y=Y_train, batch_size=20, epochs=10)

